
public class Solution {
    private int mod = 1000000007;

    private int func(int s, int e, int k, Map<Integer, Map<Integer, Integer>> mp) {
        if (s == e && k == 0) {
            return 1;
        }

        if (k == 0) {
            return 0;
        }

        if (mp.containsKey(s) && mp.get(s).containsKey(k)) {
            return mp.get(s).get(k);
        }

        int result = (int) (((long) func(s + 1, e, k - 1, mp) % mod + (long) func(s - 1, e, k - 1, mp) % mod) % mod);

        mp.computeIfAbsent(s, key -> new HashMap<>()).put(k, result);

        return result;
    }

    public int numberOfWays(int startpos, int endpos, int k) {
        Map<Integer, Map<Integer, Integer>> mp = new HashMap<>();
        return func(startpos, endpos, k, mp);
    }
}
